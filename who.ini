# Sample of a who.ini file from which to begin configuring
# this looks a lot like the "quickstart" application\'s setup,
# minus the translation capability...

[plugin:form]
# Redirecting form which does login via a "post"
# from a regular /login form
use = repoze.who.plugins.friendlyform:FriendlyFormPlugin
login_form_url = /login
login_handler_path = /authenticate
logout_handler_path = /logout
rememberer_name = ticket
post_login_url = /post_login
post_logout_url = /post_logout

[plugin:ticket]
# Cookie-based session identification storage
use = repoze.who.plugins.auth_tkt:make_plugin
secret = '975caff3876fdd38214a9cff43484cf8bc712915'
cookie_name = 'AuthenticationTicket'

[plugin:facebook]
# FacebookConnect identification and authorization
use = project.lib.auth:FacebookConnectPlugin
appid = YourFacebookApplicationAppId
secret = YourFacebookApplicationSecret

[plugin:sqlauth]
# An SQLAlchemy authorization plugin
use = project.lib.auth:authenticator

#
# Now the configuration starts wiring together the pieces
#

[general]
request_classifier = repoze.who.classifiers:default_request_classifier
challenge_decider = repoze.who.classifiers:default_challenge_decider

[identifiers]
# We can decide who the user is trying to identify as using either
# a fresh form-post, or the session identifier cookie
plugins =
    form;browser
    ticket
    facebook

[authenticators]
plugins =
    sqlauth

[challengers]
plugins =
    form;browser

[mdproviders]
# Metadata providers are the things that actually look up a user's credentials
# here we have a plugin that provides "user" information (user) and another,
# which acts as an adapter to the first, to provide group/permission information.
plugins =
    project.lib.auth:user
    project.lib.auth:group
    facebook